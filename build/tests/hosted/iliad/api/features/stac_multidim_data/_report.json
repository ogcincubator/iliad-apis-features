{
  "title": "Validation report for ogc.hosted.iliad.api.features.stac_multidim_data - ILIAD STAC/DCAT dimensional data",
  "bblockName": "ILIAD STAC/DCAT dimensional data",
  "bblockId": "ogc.hosted.iliad.api.features.stac_multidim_data",
  "generated": "2025-04-15T06:34:37.692748+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/hosted/iliad/api/features/stac_multidim_data/example_1_1.json",
        "url": "https://ogcincubator.github.io/iliad-apis-features/build/tests/hosted/iliad/api/features/stac_multidim_data/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": false,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 173,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "{'bbox': [24.351858139038086, 40.41341018676758, 9.969209968386869e+36, 9.969209968386869e+36], 'type': 'Feature', 'geometry': {'type': 'Polygon', 'coordinates': [[[24.351858139038086, 40.41341018676758], [24.351858139038086, 9.969209968386869e+36], [9.969209968386869e+36, 9.969209968386869e+36], [9.969209968386869e+36, 40.41341018676758], [24.351858139038086, 40.41341018676758]]]}, 'properties': {'title': 'No Title', 'description': 'No Description', 'datetime': ['2023-04-09T01:00:00Z'], 'created': '2024-10-03 10:22:35.026590+00:00', 'updated': ['2024-10-03T10:59:34.887874Z'], 'start_datetime': '2023-04-09T01:00:00Z', 'end_datetime': '2023-04-12T01:00:00.000Z', 'license': 'optional legal provisions under which this collection is made available. use links where available, preferably from SPDX register', 'cube:dimensions': {'trajectory': {'type': 'trajectory', 'extent': [1, 1000], 'unit': '1'}, 'time': {'type': 'temporal', 'extent': ['2023-04-09T01:00:00', '2023-04-12T01:00:00']}}, 'cube:variables': {'status': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'moving': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'age_seconds': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 's'}, 'origin_marker': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'lon': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'degrees_east'}, 'lat': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'degrees_north'}, 'z': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'wind_drift_factor': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'current_drift_factor': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '1'}, 'terminal_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm/s'}, 'mass_oil': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'viscosity': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm2/s'}, 'density': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg/m^3'}, 'bulltime': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 's'}, 'interfacial_area': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm2'}, 'mass_dispersed': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'mass_evaporated': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'mass_biodegraded': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'fraction_evaporated': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'water_fraction': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'oil_film_thickness': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'diameter': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'x_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'y_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'x_wind': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'y_wind': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'upward_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_significant_height': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_stokes_drift_x_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_stokes_drift_y_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_period_at_variance_spectral_density_maximum': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_area_fraction': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_x_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_y_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_water_temperature': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_water_salinity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_floor_depth_below_sea_level': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'ocean_vertical_diffusivity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'land_binary_mask': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'ocean_mixed_layer_thickness': {'dimensions': ['trajectory', 'time'], 'type': 'data'}}, 'themes': [{'concepts': [{'id': '12301', 'name': 'water resources management'}, {'id': 'water_resources_management', 'url': 'http://www.eionet.europa.eu/gemet/concept/12301'}], 'scheme': 'http://www.eionet.europa.eu/gemet/concept/'}, {'concepts': [{'id': 'water_quality'}], 'scheme': 'http://mmisw.org/ont/ioos/category'}], 'keywords': ['water', 'ozoother keyword'], 'wasGeneratedBy': {'provType': 'Activity', 'id': 'surveys:DP-1-S1', 'activityType': 'InitialSurvey', 'endedAtTime': '2023-10-05T05:03:15+01:00', 'wasAssociatedWith': 'staff:jd234', 'used': {'id': 'regulations:Act3', 'entityType': 'Legislation', 'wasAttributedTo': 'agents:someGovernment', 'links': [{'href': 'https://some.gov/linktoact/', 'rel': 'related'}]}}, 'contacts': [{'name': 'name of the contact, name or organisation is required or both, all the other fields are optiopnal. Roles can be defined on the contact or phones|emails|addresses level', 'organization': 'name of the organisation, name or organisation is required or both, all the other fields are optional. schema https://github.com/opengeospatial/ogcapi-records/blob/master/core/openapi/schemas/contact.yaml', 'identifier': ' optional identifier of the contact', 'position': 'optional position of the contact', 'logo': {'href': 'https://example.com/logo.png', 'rel': 'icon', 'type': 'image/png', 'description': 'descritpion is not required here just for a not in the example: link shall have rel=icon and type shall be image'}, 'links': [{'href': 'https://woudc.org', 'rel': 'about', 'type': 'text/html'}], 'phones': [{'value': '+99123456983123', 'role': 'contactPoint'}], 'emails': [{'value': 'jsmith@example.com', 'role': 'rightsHolder'}], 'addresses': [{'deliveryPoint': ['optional detailed address'], 'city': 'optional city', 'administrativeArea': 'optional administrativeArea', 'postalCode': 'optional postalCode', 'country': 'optional country'}], 'contactInstructions': 'SEE PAGE: https://woudc.org/contact.php', 'roles': ['contactPoint', 'rightsHolder', 'pubisher', 'creator', 'distributor', 'originator', 'principalInvestigator', 'processor', 'resourceProvider', 'u']}], 'rights': 'optional statement that concerns all rights not addressed by the license such as a copyright statement; string defining access rights inline or as URL', 'applicableLegislation': 'string defining applicable legislation inline or as URL, use wasGeneratedBy.used for cases whereever you can assign quality measure to particular processing step', 'convention': 'CF-1.6', 'version': 'optional resource behind the record version string', 'deprecated': False, 'latest-version': 'optional link to the record with latest version', 'predecessor-version': 'optional link to the record with previous version', 'successor-version': 'optional link to the record with next version', 'cf:parameter': [{'name': 'sea_water_salinity', 'schema': 'http://vocab.nerc.ac.uk/standard_name/', 'unit': 'https://qudt.org/2.1/vocab/unit/GM-PER-KiloGM'}], 'dqv:hasQualityMeasurement': 'optional description of the quality measures used to generate the content, use wasGeneratedBy.used for cases whereever you can assign quality measure to particular processing step', 'dqv:hasQualityMetadata': 'optional quality metadata as string or object (with structure TBD)'}, 'id': 'simulation', 'stac_version': '1.1.0', 'assets': {'data': {'href': '~/Downloads/simulation.nc', 'title': 'NetCDF Data', 'media_type': 'application/x-netcdf'}}, 'links': [{'href': 'tests/simulation/simulation.json', 'rel': 'self', 'title': 'optional link to this record'}, {'href': '~/Downloads/simulation.nc', 'rel': 'enclosure', 'type': 'application/x-hdf', 'title': 'optional raw file'}, {'href': '~/Downloads/simulation.nc', 'rel': 'preview', 'type': 'image/png', 'title': 'optional thumbnail image preview'}, {'href': 'tests/simulation/simulation.zip', 'rel': 'sample', 'type': 'application/x-hdf', 'title': 'optional link to the sample data, either one enclosure or service is required in Iliad profile'}, {'href': 'tests/simulation/simulation.zip', 'rel': 'sample', 'type': 'application/x-hdf', 'title': 'link to the data, either one enclosure or service is required in Iliad profile'}, {'href': 'https://cfconventions.org/Data/cf-conventions/cf-conventions-1.11/cf-conventions.pdf', 'rel': 'conformance', 'type': 'text/html', 'title': 'link to the resource confirmance speficication'}, {'href': 'https://example.com/ows/wms', 'rel': 'service', 'type': 'application/xml', 'title': 'optional link to the web service (not raw file) like OGC Web Map Service (WMS) either one enclosure or service is required in Iliad profile'}, {'href': 'https://example.com/license', 'rel': 'license', 'type': 'text/html', 'title': 'optional link to the license'}, {'href': 'https://example.com/next_data_record', 'rel': 'next', 'type': 'text/html', 'title': 'optional link to the next in the serie'}, {'href': 'https://example.com/prev_data_record', 'rel': 'prev', 'type': 'text/html', 'title': 'optional link to the previous in the serie'}, {'href': 'https://example.com/prev_data_record', 'rel': 'parent', 'type': 'text/html', 'title': 'optional link to the parent if data in series or other parent in the hierarchy'}], 'stac_extensions': ['https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/themes/v1.0.0/schema.json', 'https://stac-extensions.github.io/cf/v0.2.0/schema.json', 'https://stac-extensions.github.io/contacts/v0.1.1/schema.json', 'https://stac-extensions.github.io/version/v1.2.0/schema.json', 'https://stac-extensions.github.io/processing/v1.2.0/schema.json'], 'time': {'interval': ['2023-04-09 01:00:00+00:00', '2023-04-12 01:00:00+00:00'], 'resolution': 'P1D'}, 'crs': 'EPSG:4326', 'conformsTo': ['https://ogcincubator.github.io/geodcat-ogcapi-records/bblock/ogc.geo.geodcat.geodcat-stac-eo/', 'https://ogcincubator.github.io/iliad-apis-features/bblock/ogc.hosted.iliad.api.stac_record', 'https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/themes/v1.0.0/schema.json', 'https://stac-extensions.github.io/cf/v0.2.0/schema.json', 'https://stac-extensions.github.io/contacts/v0.1.1/schema.json', 'https://stac-extensions.github.io/version/v1.2.0/schema.json', 'https://stac-extensions.github.io/processing/v1.2.0/schema.json']} is not valid under any of the given schemas",
              "isError": true,
              "message": "ValidationError: {'bbox': [24.351858139038086, 40.41341018676758, 9.969209968386869e+36, 9.969209968386869e+36], 'type': 'Feature', 'geometry': {'type': 'Polygon', 'coordinates': [[[24.351858139038086, 40.41341018676758], [24.351858139038086, 9.969209968386869e+36], [9.969209968386869e+36, 9.969209968386869e+36], [9.969209968386869e+36, 40.41341018676758], [24.351858139038086, 40.41341018676758]]]}, 'properties': {'title': 'No Title', 'description': 'No Description', 'datetime': ['2023-04-09T01:00:00Z'], 'created': '2024-10-03 10:22:35.026590+00:00', 'updated': ['2024-10-03T10:59:34.887874Z'], 'start_datetime': '2023-04-09T01:00:00Z', 'end_datetime': '2023-04-12T01:00:00.000Z', 'license': 'optional legal provisions under which this collection is made available. use links where available, preferably from SPDX register', 'cube:dimensions': {'trajectory': {'type': 'trajectory', 'extent': [1, 1000], 'unit': '1'}, 'time': {'type': 'temporal', 'extent': ['2023-04-09T01:00:00', '2023-04-12T01:00:00']}}, 'cube:variables': {'status': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'moving': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'age_seconds': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 's'}, 'origin_marker': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'lon': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'degrees_east'}, 'lat': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'degrees_north'}, 'z': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'wind_drift_factor': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'current_drift_factor': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '1'}, 'terminal_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm/s'}, 'mass_oil': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'viscosity': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm2/s'}, 'density': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg/m^3'}, 'bulltime': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 's'}, 'interfacial_area': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm2'}, 'mass_dispersed': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'mass_evaporated': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'mass_biodegraded': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'kg'}, 'fraction_evaporated': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'water_fraction': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': '%'}, 'oil_film_thickness': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'diameter': {'dimensions': ['trajectory', 'time'], 'type': 'data', 'unit': 'm'}, 'x_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'y_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'x_wind': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'y_wind': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'upward_sea_water_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_significant_height': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_stokes_drift_x_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_stokes_drift_y_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_period_at_variance_spectral_density_maximum': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_area_fraction': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_x_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_ice_y_velocity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_water_temperature': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_water_salinity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'sea_floor_depth_below_sea_level': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'ocean_vertical_diffusivity': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'land_binary_mask': {'dimensions': ['trajectory', 'time'], 'type': 'data'}, 'ocean_mixed_layer_thickness': {'dimensions': ['trajectory', 'time'], 'type': 'data'}}, 'themes': [{'concepts': [{'id': '12301', 'name': 'water resources management'}, {'id': 'water_resources_management', 'url': 'http://www.eionet.europa.eu/gemet/concept/12301'}], 'scheme': 'http://www.eionet.europa.eu/gemet/concept/'}, {'concepts': [{'id': 'water_quality'}], 'scheme': 'http://mmisw.org/ont/ioos/category'}], 'keywords': ['water', 'ozoother keyword'], 'wasGeneratedBy': {'provType': 'Activity', 'id': 'surveys:DP-1-S1', 'activityType': 'InitialSurvey', 'endedAtTime': '2023-10-05T05:03:15+01:00', 'wasAssociatedWith': 'staff:jd234', 'used': {'id': 'regulations:Act3', 'entityType': 'Legislation', 'wasAttributedTo': 'agents:someGovernment', 'links': [{'href': 'https://some.gov/linktoact/', 'rel': 'related'}]}}, 'contacts': [{'name': 'name of the contact, name or organisation is required or both, all the other fields are optiopnal. Roles can be defined on the contact or phones|emails|addresses level', 'organization': 'name of the organisation, name or organisation is required or both, all the other fields are optional. schema https://github.com/opengeospatial/ogcapi-records/blob/master/core/openapi/schemas/contact.yaml', 'identifier': ' optional identifier of the contact', 'position': 'optional position of the contact', 'logo': {'href': 'https://example.com/logo.png', 'rel': 'icon', 'type': 'image/png', 'description': 'descritpion is not required here just for a not in the example: link shall have rel=icon and type shall be image'}, 'links': [{'href': 'https://woudc.org', 'rel': 'about', 'type': 'text/html'}], 'phones': [{'value': '+99123456983123', 'role': 'contactPoint'}], 'emails': [{'value': 'jsmith@example.com', 'role': 'rightsHolder'}], 'addresses': [{'deliveryPoint': ['optional detailed address'], 'city': 'optional city', 'administrativeArea': 'optional administrativeArea', 'postalCode': 'optional postalCode', 'country': 'optional country'}], 'contactInstructions': 'SEE PAGE: https://woudc.org/contact.php', 'roles': ['contactPoint', 'rightsHolder', 'pubisher', 'creator', 'distributor', 'originator', 'principalInvestigator', 'processor', 'resourceProvider', 'u']}], 'rights': 'optional statement that concerns all rights not addressed by the license such as a copyright statement; string defining access rights inline or as URL', 'applicableLegislation': 'string defining applicable legislation inline or as URL, use wasGeneratedBy.used for cases whereever you can assign quality measure to particular processing step', 'convention': 'CF-1.6', 'version': 'optional resource behind the record version string', 'deprecated': False, 'latest-version': 'optional link to the record with latest version', 'predecessor-version': 'optional link to the record with previous version', 'successor-version': 'optional link to the record with next version', 'cf:parameter': [{'name': 'sea_water_salinity', 'schema': 'http://vocab.nerc.ac.uk/standard_name/', 'unit': 'https://qudt.org/2.1/vocab/unit/GM-PER-KiloGM'}], 'dqv:hasQualityMeasurement': 'optional description of the quality measures used to generate the content, use wasGeneratedBy.used for cases whereever you can assign quality measure to particular processing step', 'dqv:hasQualityMetadata': 'optional quality metadata as string or object (with structure TBD)'}, 'id': 'simulation', 'stac_version': '1.1.0', 'assets': {'data': {'href': '~/Downloads/simulation.nc', 'title': 'NetCDF Data', 'media_type': 'application/x-netcdf'}}, 'links': [{'href': 'tests/simulation/simulation.json', 'rel': 'self', 'title': 'optional link to this record'}, {'href': '~/Downloads/simulation.nc', 'rel': 'enclosure', 'type': 'application/x-hdf', 'title': 'optional raw file'}, {'href': '~/Downloads/simulation.nc', 'rel': 'preview', 'type': 'image/png', 'title': 'optional thumbnail image preview'}, {'href': 'tests/simulation/simulation.zip', 'rel': 'sample', 'type': 'application/x-hdf', 'title': 'optional link to the sample data, either one enclosure or service is required in Iliad profile'}, {'href': 'tests/simulation/simulation.zip', 'rel': 'sample', 'type': 'application/x-hdf', 'title': 'link to the data, either one enclosure or service is required in Iliad profile'}, {'href': 'https://cfconventions.org/Data/cf-conventions/cf-conventions-1.11/cf-conventions.pdf', 'rel': 'conformance', 'type': 'text/html', 'title': 'link to the resource confirmance speficication'}, {'href': 'https://example.com/ows/wms', 'rel': 'service', 'type': 'application/xml', 'title': 'optional link to the web service (not raw file) like OGC Web Map Service (WMS) either one enclosure or service is required in Iliad profile'}, {'href': 'https://example.com/license', 'rel': 'license', 'type': 'text/html', 'title': 'optional link to the license'}, {'href': 'https://example.com/next_data_record', 'rel': 'next', 'type': 'text/html', 'title': 'optional link to the next in the serie'}, {'href': 'https://example.com/prev_data_record', 'rel': 'prev', 'type': 'text/html', 'title': 'optional link to the previous in the serie'}, {'href': 'https://example.com/prev_data_record', 'rel': 'parent', 'type': 'text/html', 'title': 'optional link to the parent if data in series or other parent in the hierarchy'}], 'stac_extensions': ['https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/themes/v1.0.0/schema.json', 'https://stac-extensions.github.io/cf/v0.2.0/schema.json', 'https://stac-extensions.github.io/contacts/v0.1.1/schema.json', 'https://stac-extensions.github.io/version/v1.2.0/schema.json', 'https://stac-extensions.github.io/processing/v1.2.0/schema.json'], 'time': {'interval': ['2023-04-09 01:00:00+00:00', '2023-04-12 01:00:00+00:00'], 'resolution': 'P1D'}, 'crs': 'EPSG:4326', 'conformsTo': ['https://ogcincubator.github.io/geodcat-ogcapi-records/bblock/ogc.geo.geodcat.geodcat-stac-eo/', 'https://ogcincubator.github.io/iliad-apis-features/bblock/ogc.hosted.iliad.api.stac_record', 'https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/datacube/v2.2.0/schema.json', 'https://stac-extensions.github.io/themes/v1.0.0/schema.json', 'https://stac-extensions.github.io/cf/v0.2.0/schema.json', 'https://stac-extensions.github.io/contacts/v0.1.1/schema.json', 'https://stac-extensions.github.io/version/v1.2.0/schema.json', 'https://stac-extensions.github.io/processing/v1.2.0/schema.json']} is not valid under any of the given schemas\n\nFailed validating 'anyOf' in schema['allOf'][1]:\n    {'anyOf': [{'$ref': 'https://ogcincubator.github.io/bblocks-stac/build/annotated/contrib/stac/item/schema.yaml'},\n               {'$ref': 'https://ogcincubator.github.io/bblocks-stac/build/annotated/contrib/stac/item-v1-0-0/schema.yaml'}]}\n\nOn instance:\n    {'assets': {'data': {'href': '~/Downloads/simulation.nc',\n                         'media_type': 'application/x-netcdf',\n                         'title': 'NetCDF Data'}},\n     'bbox': [24.351858139038086,\n              40.41341018676758,\n              9.969209968386869e+36,\n              9.969209968386869e+36],\n     'conformsTo': ['https://ogcincubator.github.io/geodcat-ogcapi-records/bblock/ogc.geo.geodcat.geodcat-stac-eo/',\n                    'https://ogcincubator.github.io/iliad-apis-features/bblock/ogc.hosted.iliad.api.stac_record',\n                    'https://stac-extensions.github.io/datacube/v2.2.0/schema.json',\n                    'https://stac-extensions.github.io/datacube/v2.2.0/schema.json',\n                    'https://stac-extensions.github.io/themes/v1.0.0/schema.json',\n                    'https://stac-extensions.github.io/cf/v0.2.0/schema.json',\n                    'https://stac-extensions.github.io/contacts/v0.1.1/schema.json',\n                    'https://stac-extensions.github.io/version/v1.2.0/schema.json',\n                    'https://stac-extensions.github.io/processing/v1.2.0/schema.json'],\n     'crs': 'EPSG:4326',\n     'geometry': {'coordinates': [[[24.351858139038086, 40.41341018676758],\n                                   [24.351858139038086,\n                                    9.969209968386869e+36],\n                                   [9.969209968386869e+36,\n                                    9.969209968386869e+36],\n                                   [9.969209968386869e+36,\n                                    40.41341018676758],\n                                   [24.351858139038086,\n                                    40.41341018676758]]],\n                  'type': 'Polygon'},\n     'id': 'simulation',\n     'links': [{'href': 'tests/simulation/simulation.json',\n                'rel': 'self',\n                'title': 'optional link to this record'},\n               {'href': '~/Downloads/simulation.nc',\n                'rel': 'enclosure',\n                'title': 'optional raw file',\n                'type': 'application/x-hdf'},\n               {'href': '~/Downloads/simulation.nc',\n                'rel': 'preview',\n                'title': 'optional thumbnail image preview',\n                'type': 'image/png'},\n               {'href': 'tests/simulation/simulation.zip',\n                'rel': 'sample',\n                'title': 'optional link to the sample data, either one '\n                         'enclosure or service is required in Iliad '\n                         'profile',\n                'type': 'application/x-hdf'},\n               {'href': 'tests/simulation/simulation.zip',\n                'rel': 'sample',\n                'title': 'link to the data, either one enclosure or '\n                         'service is required in Iliad profile',\n                'type': 'application/x-hdf'},\n               {'href': 'https://cfconventions.org/Data/cf-conventions/cf-conventions-1.11/cf-conventions.pdf',\n                'rel': 'conformance',\n                'title': 'link to the resource confirmance speficication',\n                'type': 'text/html'},\n               {'href': 'https://example.com/ows/wms',\n                'rel': 'service',\n                'title': 'optional link to the web service (not raw file) '\n                         'like OGC Web Map Service (WMS) either one '\n                         'enclosure or service is required in Iliad '\n                         'profile',\n                'type': 'application/xml'},\n               {'href': 'https://example.com/license',\n                'rel': 'license',\n                'title': 'optional link to the license',\n                'type': 'text/html'},\n               {'href': 'https://example.com/next_data_record',\n                'rel': 'next',\n                'title': 'optional link to the next in the serie',\n                'type': 'text/html'},\n               {'href': 'https://example.com/prev_data_record',\n                'rel': 'prev',\n                'title': 'optional link to the previous in the serie',\n                'type': 'text/html'},\n               {'href': 'https://example.com/prev_data_record',\n                'rel': 'parent',\n                'title': 'optional link to the parent if data in series or '\n                         'other parent in the hierarchy',\n                'type': 'text/html'}],\n     'properties': {'applicableLegislation': 'string defining applicable '\n                                             'legislation inline or as '\n                                             'URL, use wasGeneratedBy.used '\n                                             'for cases whereever you can '\n                                             'assign quality measure to '\n                                             'particular processing step',\n                    'cf:parameter': [{'name': 'sea_water_salinity',\n                                      'schema': 'http://vocab.nerc.ac.uk/standard_name/',\n                                      'unit': 'https://qudt.org/2.1/vocab/unit/GM-PER-KiloGM'}],\n                    'contacts': [{'addresses': [{'administrativeArea': 'optional '\n                                                                       'administrativeArea',\n                                                 'city': 'optional city',\n                                                 'country': 'optional '\n                                                            'country',\n                                                 'deliveryPoint': ['optional '\n                                                                   'detailed '\n                                                                   'address'],\n                                                 'postalCode': 'optional '\n                                                               'postalCode'}],\n                                  'contactInstructions': 'SEE PAGE: '\n                                                         'https://woudc.org/contact.php',\n                                  'emails': [{'role': 'rightsHolder',\n                                              'value': 'jsmith@example.com'}],\n                                  'identifier': ' optional identifier of '\n                                                'the contact',\n                                  'links': [{'href': 'https://woudc.org',\n                                             'rel': 'about',\n                                             'type': 'text/html'}],\n                                  'logo': {'description': 'descritpion is '\n                                                          'not required '\n                                                          'here just for a '\n                                                          'not in the '\n                                                          'example: link '\n                                                          'shall have '\n                                                          'rel=icon and '\n                                                          'type shall be '\n                                                          'image',\n                                           'href': 'https://example.com/logo.png',\n                                           'rel': 'icon',\n                                           'type': 'image/png'},\n                                  'name': 'name of the contact, name or '\n                                          'organisation is required or '\n                                          'both, all the other fields are '\n                                          'optiopnal. Roles can be defined '\n                                          'on the contact or '\n                                          'phones|emails|addresses level',\n                                  'organization': 'name of the '\n                                                  'organisation, name or '\n                                                  'organisation is '\n                                                  'required or both, all '\n                                                  'the other fields are '\n                                                  'optional. schema '\n                                                  'https://github.com/opengeospatial/ogcapi-records/blob/master/core/openapi/schemas/contact.yaml',\n                                  'phones': [{'role': 'contactPoint',\n                                              'value': '+99123456983123'}],\n                                  'position': 'optional position of the '\n                                              'contact',\n                                  'roles': ['contactPoint',\n                                            'rightsHolder',\n                                            'pubisher',\n                                            'creator',\n                                            'distributor',\n                                            'originator',\n                                            'principalInvestigator',\n                                            'processor',\n                                            'resourceProvider',\n                                            'u']}],\n                    'convention': 'CF-1.6',\n                    'created': '2024-10-03 10:22:35.026590+00:00',\n                    'cube:dimensions': {'time': {'extent': ['2023-04-09T01:00:00',\n                                                            '2023-04-12T01:00:00'],\n                                                 'type': 'temporal'},\n                                        'trajectory': {'extent': [1, 1000],\n                                                       'type': 'trajectory',\n                                                       'unit': '1'}},\n                    'cube:variables': {'age_seconds': {'dimensions': ['trajectory',\n                                                                      'time'],\n                                                       'type': 'data',\n                                                       'unit': 's'},\n                                       'bulltime': {'dimensions': ['trajectory',\n                                                                   'time'],\n                                                    'type': 'data',\n                                                    'unit': 's'},\n                                       'current_drift_factor': {'dimensions': ['trajectory',\n                                                                               'time'],\n                                                                'type': 'data',\n                                                                'unit': '1'},\n                                       'density': {'dimensions': ['trajectory',\n                                                                  'time'],\n                                                   'type': 'data',\n                                                   'unit': 'kg/m^3'},\n                                       'diameter': {'dimensions': ['trajectory',\n                                                                   'time'],\n                                                    'type': 'data',\n                                                    'unit': 'm'},\n                                       'fraction_evaporated': {'dimensions': ['trajectory',\n                                                                              'time'],\n                                                               'type': 'data',\n                                                               'unit': '%'},\n                                       'interfacial_area': {'dimensions': ['trajectory',\n                                                                           'time'],\n                                                            'type': 'data',\n                                                            'unit': 'm2'},\n                                       'land_binary_mask': {'dimensions': ['trajectory',\n                                                                           'time'],\n                                                            'type': 'data'},\n                                       'lat': {'dimensions': ['trajectory',\n                                                              'time'],\n                                               'type': 'data',\n                                               'unit': 'degrees_north'},\n                                       'lon': {'dimensions': ['trajectory',\n                                                              'time'],\n                                               'type': 'data',\n                                               'unit': 'degrees_east'},\n                                       'mass_biodegraded': {'dimensions': ['trajectory',\n                                                                           'time'],\n                                                            'type': 'data',\n                                                            'unit': 'kg'},\n                                       'mass_dispersed': {'dimensions': ['trajectory',\n                                                                         'time'],\n                                                          'type': 'data',\n                                                          'unit': 'kg'},\n                                       'mass_evaporated': {'dimensions': ['trajectory',\n                                                                          'time'],\n                                                           'type': 'data',\n                                                           'unit': 'kg'},\n                                       'mass_oil': {'dimensions': ['trajectory',\n                                                                   'time'],\n                                                    'type': 'data',\n                                                    'unit': 'kg'},\n                                       'moving': {'dimensions': ['trajectory',\n                                                                 'time'],\n                                                  'type': 'data'},\n                                       'ocean_mixed_layer_thickness': {'dimensions': ['trajectory',\n                                                                                      'time'],\n                                                                       'type': 'data'},\n                                       'ocean_vertical_diffusivity': {'dimensions': ['trajectory',\n                                                                                     'time'],\n                                                                      'type': 'data'},\n                                       'oil_film_thickness': {'dimensions': ['trajectory',\n                                                                             'time'],\n                                                              'type': 'data',\n                                                              'unit': 'm'},\n                                       'origin_marker': {'dimensions': ['trajectory',\n                                                                        'time'],\n                                                         'type': 'data'},\n                                       'sea_floor_depth_below_sea_level': {'dimensions': ['trajectory',\n                                                                                          'time'],\n                                                                           'type': 'data'},\n                                       'sea_ice_area_fraction': {'dimensions': ['trajectory',\n                                                                                'time'],\n                                                                 'type': 'data'},\n                                       'sea_ice_x_velocity': {'dimensions': ['trajectory',\n                                                                             'time'],\n                                                              'type': 'data'},\n                                       'sea_ice_y_velocity': {'dimensions': ['trajectory',\n                                                                             'time'],\n                                                              'type': 'data'},\n                                       'sea_surface_wave_mean_period_from_variance_spectral_density_second_frequency_moment': {'dimensions': ['trajectory',\n                                                                                                                                              'time'],\n                                                                                                                               'type': 'data'},\n                                       'sea_surface_wave_period_at_variance_spectral_density_maximum': {'dimensions': ['trajectory',\n                                                                                                                       'time'],\n                                                                                                        'type': 'data'},\n                                       'sea_surface_wave_significant_height': {'dimensions': ['trajectory',\n                                                                                              'time'],\n                                                                               'type': 'data'},\n                                       'sea_surface_wave_stokes_drift_x_velocity': {'dimensions': ['trajectory',\n                                                                                                   'time'],\n                                                                                    'type': 'data'},\n                                       'sea_surface_wave_stokes_drift_y_velocity': {'dimensions': ['trajectory',\n                                                                                                   'time'],\n                                                                                    'type': 'data'},\n                                       'sea_water_salinity': {'dimensions': ['trajectory',\n                                                                             'time'],\n                                                              'type': 'data'},\n                                       'sea_water_temperature': {'dimensions': ['trajectory',\n                                                                                'time'],\n                                                                 'type': 'data'},\n                                       'status': {'dimensions': ['trajectory',\n                                                                 'time'],\n                                                  'type': 'data'},\n                                       'terminal_velocity': {'dimensions': ['trajectory',\n                                                                            'time'],\n                                                             'type': 'data',\n                                                             'unit': 'm/s'},\n                                       'upward_sea_water_velocity': {'dimensions': ['trajectory',\n                                                                                    'time'],\n                                                                     'type': 'data'},\n                                       'viscosity': {'dimensions': ['trajectory',\n                                                                    'time'],\n                                                     'type': 'data',\n                                                     'unit': 'm2/s'},\n                                       'water_fraction': {'dimensions': ['trajectory',\n                                                                         'time'],\n                                                          'type': 'data',\n                                                          'unit': '%'},\n                                       'wind_drift_factor': {'dimensions': ['trajectory',\n                                                                            'time'],\n                                                             'type': 'data',\n                                                             'unit': '%'},\n                                       'x_sea_water_velocity': {'dimensions': ['trajectory',\n                                                                               'time'],\n                                                                'type': 'data'},\n                                       'x_wind': {'dimensions': ['trajectory',\n                                                                 'time'],\n                                                  'type': 'data'},\n                                       'y_sea_water_velocity': {'dimensions': ['trajectory',\n                                                                               'time'],\n                                                                'type': 'data'},\n                                       'y_wind': {'dimensions': ['trajectory',\n                                                                 'time'],\n                                                  'type': 'data'},\n                                       'z': {'dimensions': ['trajectory',\n                                                            'time'],\n                                             'type': 'data',\n                                             'unit': 'm'}},\n                    'datetime': ['2023-04-09T01:00:00Z'],\n                    'deprecated': False,\n                    'description': 'No Description',\n                    'dqv:hasQualityMeasurement': 'optional description of '\n                                                 'the quality measures '\n                                                 'used to generate the '\n                                                 'content, use '\n                                                 'wasGeneratedBy.used for '\n                                                 'cases whereever you can '\n                                                 'assign quality measure '\n                                                 'to particular processing '\n                                                 'step',\n                    'dqv:hasQualityMetadata': 'optional quality metadata '\n                                              'as string or object (with '\n                                              'structure TBD)',\n                    'end_datetime': '2023-04-12T01:00:00.000Z',\n                    'keywords': ['water', 'ozoother keyword'],\n                    'latest-version': 'optional link to the record with '\n                                      'latest version',\n                    'license': 'optional legal provisions under which this '\n                               'collection is made available. use links '\n                               'where available, preferably from SPDX '\n                               'register',\n                    'predecessor-version': 'optional link to the record '\n                                           'with previous version',\n                    'rights': 'optional statement that concerns all rights '\n                              'not addressed by the license such as a '\n                              'copyright statement; string defining access '\n                              'rights inline or as URL',\n                    'start_datetime': '2023-04-09T01:00:00Z',\n                    'successor-version': 'optional link to the record with '\n                                         'next version',\n                    'themes': [{'concepts': [{'id': '12301',\n                                              'name': 'water resources '\n                                                      'management'},\n                                             {'id': 'water_resources_management',\n                                              'url': 'http://www.eionet.europa.eu/gemet/concept/12301'}],\n                                'scheme': 'http://www.eionet.europa.eu/gemet/concept/'},\n                               {'concepts': [{'id': 'water_quality'}],\n                                'scheme': 'http://mmisw.org/ont/ioos/category'}],\n                    'title': 'No Title',\n                    'updated': ['2024-10-03T10:59:34.887874Z'],\n                    'version': 'optional resource behind the record '\n                               'version string',\n                    'wasGeneratedBy': {'activityType': 'InitialSurvey',\n                                       'endedAtTime': '2023-10-05T05:03:15+01:00',\n                                       'id': 'surveys:DP-1-S1',\n                                       'provType': 'Activity',\n                                       'used': {'entityType': 'Legislation',\n                                                'id': 'regulations:Act3',\n                                                'links': [{'href': 'https://some.gov/linktoact/',\n                                                           'rel': 'related'}],\n                                                'wasAttributedTo': 'agents:someGovernment'},\n                                       'wasAssociatedWith': 'staff:jd234'}},\n     'stac_extensions': ['https://stac-extensions.github.io/datacube/v2.2.0/schema.json',\n                         'https://stac-extensions.github.io/themes/v1.0.0/schema.json',\n                         'https://stac-extensions.github.io/cf/v0.2.0/schema.json',\n                         'https://stac-extensions.github.io/contacts/v0.1.1/schema.json',\n                         'https://stac-extensions.github.io/version/v1.2.0/schema.json',\n                         'https://stac-extensions.github.io/processing/v1.2.0/schema.json'],\n     'stac_version': '1.1.0',\n     'time': {'interval': ['2023-04-09 01:00:00+00:00',\n                           '2023-04-12 01:00:00+00:00'],\n              'resolution': 'P1D'},\n     'type': 'Feature'}"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "https://ogcincubator.github.io/geodcat-ogcapi-records/_sources/records-ontology/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for https://ogcincubator.github.io/geodcat-ogcapi-records/_sources/records-ontology/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "https://ogcincubator.github.io/geodcat-ogcapi-records/_sources/records-ontology/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/rec/#testVarExists>": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for https://ogcincubator.github.io/geodcat-ogcapi-records/_sources/records-ontology/rules.shacl:\n - Shape <https://www.ogc.org/rules/rec/#testVarExists>: *none*\n"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 1,
    "passed": 0,
    "failed": 1
  }
}
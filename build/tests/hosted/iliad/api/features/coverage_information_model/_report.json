{
  "title": "Validation report for ogc.hosted.iliad.api.features.coverage_information_model - OGC Coverage Implementation Schema",
  "bblockName": "OGC Coverage Implementation Schema",
  "bblockId": "ogc.hosted.iliad.api.features.coverage_information_model",
  "generated": "2023-12-07T11:54:02.709701+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "https://ogcincubator.github.io/iliad-apis-features/_sources/coverage_information_model/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 33,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "https://ogcincubator.github.io/iliad-apis-features/_sources/coverage_information_model/example_2_1.jsonld",
        "exampleIndex": 2,
        "snippetIndex": 1,
        "language": "jsonld"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_2_1.jsonld from examples"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": []
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "https://ogcincubator.github.io/iliad-apis-features/_sources/coverage_information_model/example_3_1.ttl",
        "exampleIndex": 3,
        "snippetIndex": 1,
        "language": "ttl"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_3_1.ttl from examples"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_3_1.ttl",
              "size": 34,
              "isError": false,
              "message": "Output Turtle example_3_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": []
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    }
  ],
  "globalErrors": {
    "UNKNOWN": {
      "exception": "HTTPError",
      "isError": true,
      "message": "Traceback (most recent call last):\n,  File \"/src/ogc/bblocks/validate.py\", line 606, in _validate_resource\n    validate_inner()\n,  File \"/src/ogc/bblocks/validate.py\", line 405, in validate_inner\n    graph = Graph().parse(data=json_doc, format='json-ld', base=base_uri)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/graph.py\", line 1494, in parse\n    parser.parse(source, self, **args)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 119, in parse\n    to_rdf(data, conj_sink, base, context_data, version, generalized_rdf)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 138, in to_rdf\n    return parser.parse(data, context, dataset)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 177, in parse\n    self._add_to_graph(dataset, graph, context, node, topcontext)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 238, in _add_to_graph\n    self._key_to_graph(dataset, graph, context, subj, key, obj, no_id=no_id)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 364, in _key_to_graph\n    obj = self._to_object(dataset, graph, context, term, obj_node)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 532, in _to_object\n    return self._add_to_graph(dataset, graph, context, node)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/parsers/jsonld.py\", line 196, in _add_to_graph\n    context = context.subcontext(local_context)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/context.py\", line 118, in subcontext\n    return parent._subcontext(source, propagate)  # type: ignore[union-attr]\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/context.py\", line 133, in _subcontext\n    ctx.load(source)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/context.py\", line 401, in load\n    self._prep_sources(base, source, sources, referenced_contexts)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/context.py\", line 430, in _prep_sources\n    new_ctx = self._fetch_context(\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/context.py\", line 472, in _fetch_context\n    source = source_to_json(source_url)  # type: ignore[assignment]\n,  File \"/venv/lib/python3.10/site-packages/rdflib/plugins/shared/jsonld/util.py\", line 44, in source_to_json\n    source = create_input_source(source, format=\"json-ld\")\n,  File \"/venv/lib/python3.10/site-packages/rdflib/parser.py\", line 416, in create_input_source\n    ) = _create_input_source_from_location(\n,  File \"/venv/lib/python3.10/site-packages/rdflib/parser.py\", line 478, in _create_input_source_from_location\n    input_source = URLInputSource(absolute_location, format)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/parser.py\", line 285, in __init__\n    response: addinfourl = _urlopen(req)\n,  File \"/venv/lib/python3.10/site-packages/rdflib/parser.py\", line 272, in _urlopen\n    return urlopen(req)\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 216, in urlopen\n    return opener.open(url, data, timeout)\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 525, in open\n    response = meth(req, response)\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 634, in http_response\n    response = self.parent.error(\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 563, in error\n    return self._call_chain(*args)\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 496, in _call_chain\n    result = func(*args)\n,  File \"/usr/local/lib/python3.10/urllib/request.py\", line 643, in http_error_default\n    raise HTTPError(req.full_url, code, msg, hdrs, fp)\n,urllib.error.HTTPError: HTTP Error 404: Not Found\n"
    }
  },
  "counts": {
    "total": 3,
    "passed": 2,
    "failed": 1
  }
}